[metadata]
format.version = "1.1"

[versions]
assertj = "3.23.1"
awaitility = "4.2.0"
edc = "0.1.4-SNAPSHOT"
failsafe = "3.3.1"
httpMockServer = "5.15.0"
jetbrains-annotations = "24.0.1"
jupiter = "5.9.2"
okhttp = "4.10.0"
openApiTools = "0.2.6"
picocli = "4.6.3"

[libraries]
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
failsafe-core = { module = "dev.failsafe:failsafe", version.ref = "failsafe" }
ih-spi-core = { module = "org.eclipse.edc:identity-hub-spi", version.ref = "edc" }
ih-core = { module = "org.eclipse.edc:identity-hub", version.ref = "edc" }
ih-core-api = { module = "org.eclipse.edc:identity-hub-api", version.ref = "edc" }
ih-core-client = { module = "org.eclipse.edc:identity-hub-client", version.ref = "edc" }
ih-core-verifier = { module = "org.eclipse.edc:identity-hub-credentials-verifier", version.ref = "edc" }
ih-ext-verifier-jwt = { module = "org.eclipse.edc:identity-hub-verifier-jwt", version.ref = "edc" }
ih-ext-credentials-jwt = { module = "org.eclipse.edc:identity-hub-credentials-jwt", version.ref = "edc" }
edc-util = { module = "org.eclipse.edc:util", version.ref = "edc" }
edc-junit = { module = "org.eclipse.edc:junit", version.ref = "edc" }
edc-boot = { module = "org.eclipse.edc:boot", version.ref = "edc" }
edc-spi-core = { module = "org.eclipse.edc:core-spi", version.ref = "edc" }
edc-spi-http = { module = "org.eclipse.edc:http-spi", version.ref = "edc" }
edc-spi-policy-engine = { module = "org.eclipse.edc:policy-engine-spi", version.ref = "edc" }
edc-spi-transaction = { module = "org.eclipse.edc:transaction-spi", version.ref = "edc" }
edc-spi-transaction-datasource = { module = "org.eclipse.edc:transaction-datasource-spi", version.ref = "edc" }
edc-spi-identity-did = { module = "org.eclipse.edc:identity-did-spi", version.ref = "edc" }
edc-spi-aggregate-service = { module = "org.eclipse.edc:aggregate-service-spi", version.ref = "edc" }
edc-core-connector = { module = "org.eclipse.edc:connector-core", version.ref = "edc" }
edc-core-micrometer = { module = "org.eclipse.edc:micrometer-core", version.ref = "edc" }
edc-core-api = { module = "org.eclipse.edc:api-core", version.ref = "edc" }
edc-core-stateMachine = { module = "org.eclipse.edc:state-machine", version.ref = "edc" }
edc-core-sql = { module = "org.eclipse.edc:sql-core", version.ref = "edc" }
edc-core-junit = { module = "org.eclipse.edc:junit", version.ref = "edc" }
edc-ext-identity-did-crypto = { module = "org.eclipse.edc:identity-did-crypto", version.ref = "edc" }
edc-ext-identity-did-core = { module = "org.eclipse.edc:identity-did-core", version.ref = "edc" }
edc-ext-identity-did-web = { module = "org.eclipse.edc:identity-did-web", version.ref = "edc" }
edc-ext-http = { module = "org.eclipse.edc:http", version.ref = "edc" }
edc-ext-json-ld = { module = "org.eclipse.edc:json-ld", version.ref = "edc" }
edc-ext-micrometer-jetty = { module = "org.eclipse.edc:jetty-micrometer", version.ref = "edc" }
edc-ext-micrometer-jersey = { module = "org.eclipse.edc:jersey-micrometer", version.ref = "edc" }
edc-ext-observability = { module = "org.eclipse.edc:api-observability", version.ref = "edc" }
edc-ext-configuration-filesystem = { module = "org.eclipse.edc:configuration-filesystem", version.ref = "edc" }
edc-ext-vault-filesystem = { module = "org.eclipse.edc:vault-filesystem", version.ref = "edc" }
edc-ext-jdklogger = { module = "org.eclipse.edc:monitor-jdk-logger", version.ref = "edc" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrains-annotations" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "jupiter" }
picocli-core = { module = "info.picocli:picocli", version.ref = "picocli" }
picocli-codegen = { module = "info.picocli:picocli-codegen", version.ref = "picocli" }
mockserver-netty = { module = "org.mock-server:mockserver-netty", version.ref = "httpMockServer" }
mockserver-client = { module = "org.mock-server:mockserver-client-java", version.ref = "httpMockServer" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }
openapi-jackson-databind-nullable = { module = "org.openapitools:jackson-databind-nullable", version.ref = "openApiTools" }
opentelemetry-instrumentation-annotations = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations", version = "1.24.0" }

[bundles]

[plugins]
shadow = { id = "com.github.johnrengelman.shadow", version = "8.0.0" }
swagger = { id = "io.swagger.core.v3.swagger-gradle-plugin" }
